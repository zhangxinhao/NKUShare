<style lang = "less">
  .float-container {
    position: fixed;
    bottom: 40rpx;
    right: 40rpx;
    overflow: hidden;
  }
  .float-action {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    background: #E14848;
    z-index: 100;
    text-align: center;
    opacity: .5;
    margin-left: 40rpx;
    float: right;
  }
  .float-action:active {
    opacity: 1
  }
  .float-action image {
      width: 60rpx;
      height: 60rpx;
      margin-top: 20rpx;
  }
</style>
<template>
  <view class="container">
    <repeat for="{{list}}" index="index" item="item">
      <card
        :name="item.lostFoundTitle"
        :lostFoundTime="item.date"
        :lostFoundLocation="item.lostFoundLocation"
        :lostFoungNameUrl="item.imgList[0]"
        :lostFoundType="item.lostFoundType"
        :id="item._id"
      ></card>
    </repeat>
    <view class="float-container">
      <view class="float-action" @tap="addCard">
        <image src="../../static/lostFound/plus.png" />
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import lostFoundCard from '@/components/lostFound/lostFoundCard'

export default class showLostFound extends wepy.page {
  data = {
    list: []
  }
  methods = {
    addCard () {
      wx.getSetting({
        success(res) {
          if (res.authSetting['scope.userInfo']) {
            wepy.navigateTo({
              url: './addLostFound'
            })
          } else {
            wx.showModal({
              title: '亲爱的用户',
              content: '您未授权，请前往授权',
              showCancel: true,
              cancelText: '取消',
              confirmText: '确认',
              success: res => {
                if (res.confirm) {
                  wepy.navigateTo({
                    url: '../about/userInfo'
                  })
                } else if (res.cancel){
                  return
                }
              }
            })
          }
        }
      })
    }
  }
  onShow() {
    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })
    const lostFound = database.collection('lost_found')
    let that = this
    lostFound.get({
      success(res) {
        that.list = res.data
        that.$apply()
      }
    })
  }
  components = {
    card: lostFoundCard
  }
}
</script>
