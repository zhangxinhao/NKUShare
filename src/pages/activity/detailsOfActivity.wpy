<style>
</style>
<template>
  <view class="padding-sm">
    <view class="cu-card bg-white radius shadow-blur grid col-1 margin-bottom">
      <view class="text-xl padding" role="" aria-label="">
        <text class="text-black text-bold">活动主题:{{ actDetails.title }}</text>
      </view>
      <view
        class="cu-list menu {{menuBorder?'sm-border':''}} {{menuCard?'card-menu margin-top':''}}"
      >
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-profilefill text-olive"></text>
            <text class="text-grey">发起者:</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm">{{sponsorName}} {{sponsorCollege}}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-calendar text-grey"></text>
            <text class="text-grey">报名截止时间</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm">{{actDetails.date}}-{{actDetails.register_end}}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-time text-grey"></text>
            <text class="text-grey">活动开始时间</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm">{{actDetails.date}}-{{actDetails.begin}}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-location text-red"></text>
            <text class="text-grey">活动地点</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm">{{actDetails.location}}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-people text-green"></text>
            <text class="text-grey">活动人数</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm">{{actDetails.num_min}}~{{actDetails.num_max}}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-friend text-green"></text>
            <text class="text-grey">参与成员</text>
          </view>
          <view class="action">
            <view class="cu-avatar-group">
              <repeat for="{{attendeesAvatar}}" key="index" index="index" item="item">
                <view class="cu-avatar round sm" style="background-image:url({{item}});"></view>
              </repeat>
            </view>
          </view>
        </view>
        <view class="cu-item">
          <view class="content padding-tb-sm">
            <view>
              <text class="cuIcon-post text-blue margin-right-xs"></text>详细描述
            </view>
            <view class="text-gray text-sm">
              <text class="cuIcon-infofill margin-right-xs"></text>
              {{ actDetails.description }}
            </view>
          </view>
        </view>
      </view>
      <view wx:if="{{hasJoin==false || hasAuthorized==false}}" class="padding flex flex-direction">
        <button class="cu-btn bg-grey lg" @tap="attend">报名参加</button>
      </view>
      <view wx:if="{{hasJoin==true && hasAuthorized==true}}" class="padding flex flex-direction">
        <view class="padding-xs flex flex-direction">
          <button
            class="cu-btn round bg-blue lg"
            role="button"
            aria-label=""
            aria-disabled="false"
            bindtap="showModal"
            data-target="DialogModal1"
          >活动反馈评价</button>
        </view>
        <view wx:if="{{isCreator==false}}" class="padding-xs flex flex-direction">
          <button
            class="cu-btn round bg-red lg"
            role="button"
            aria-label=""
            aria-disabled="false"
            bindtap="quit"
          >退出活动</button>
        </view>
        <comments/>
      </view>
      <view class="cu-modal {{modalName=='DialogModal1'?'show':''}}">
        <view class="cu-dialog">
          <view class="cu-bar bg-white justify-end">
            <view class="content">评价</view>
            <view class="action" bindtap="hideModal">
              <text class="cuIcon-close text-red"></text>
            </view>
          </view>
          <view class="padding-xl">
            <view class="cu-form-group margin-top">
              <view class="title">评分星级</view>
              <picker bindchange="PickerChange" value="{{index}}" range="{{picker}}">
                <view class="picker">{{index?picker[index]:'请选择其中一种'}}</view>
              </picker>
            </view>
          </view>
          <view class="cu-bar bg-white justify-end">
            <view class="action">
              <button class="cu-btn line-green text-green" bindtap="hideModal">取消</button>
              <button class="cu-btn bg-green margin-left" bindtap="hideModal">确认评价</button>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import commentArea from '../../components/activity/commentArea'

export default class detailsOfActivity extends wepy.page {
  config = {
    navigationBarTitleText: '活动详情'
  }
  components = {
    comments: commentArea
  }
  data = {
    userID: '', // 当前用户ID
    actID: String,
    actDetails: {}, // 活动详情字典
    actTakes: [], // 活动参与者列表
    sponsorID: '',
    sponsorName: '',
    sponsorCollege: '',
    attendeesAvatar: [],
    // 当前用户是否是创建者，创建者无法退出活动
    isCreator: false,
    // 当前用户是否已加入活动，创建者和参与者此值均为true
    hasJoin: false,
    // 判断用户是否已对小程序授权
    hasAuthorized: false,
    modalName: null,
    picker: ['1', '2', '3', '4', '5'],
    index: null
  }
  computed = {}
  methods = {
    attend(e) {
      if (this.hasAuthorized) {
        this.attendActivity()
      } else {
        wx.showModal({
          title: '亲爱的用户',
          content: '您未授权，请前往授权',
          showCancel: true,
          cancelText: '取消',
          confirmText: '确认',
          success: res => {
            if (res.confirm) {
              wepy.redirectTo({
                url: '../about/userInfo'
              })
            } else if (res.cancel) {
            }
          }
        })
      }
    },
    quit: function(e) {
      // 退出确认提示
      wx.showModal({
        title: '亲爱的用户',
        content: '您确认要退出吗？',
        showCancel: true,
        cancelText: '取消',
        confirmText: '确认',
        success: res => {
          if (res.confirm) {
            // 显示loading提示框
            wx.showLoading({
              title: '退出活动中',
              // 防止触摸穿透
              mask: true
            })
            let that = this
            wx.cloud.callFunction({
              name: 'quitActivity',
              data: {
                act_id: that.actID,
                userID: that.userID,
                type: 'A'
              },
              complete: res => {
                that.hasJoin = false
                that.setData({
                  hasJoin: that.hasJoin
                })
                that.requestNewUser()
                wx.hideLoading()
                wx.showModal({
                  title: '亲爱的用户',
                  content: '您已成功退出',
                  showCancel: false,
                  // cancelText: '取消',
                  confirmText: '确认',
                  success: res => {}
                })
              }
            })
          } else if (res.cancle) {
          }
        }
      })
    },
    showModal(e) {
      this.modalName = e.currentTarget.dataset.target
    },
    hideModal(e) {
      this.modalName = null
    },
    PickerChange(e) {
      this.index = e.detail.value
    }
  }
  onLoad(options) {
    // 显示loading提示框
    wx.showLoading({
      title: '加载中',
      // 防止触摸穿透
      mask: true
    })
    this.actID = options.id
    this.userID = this.$parent.globalData.userID
    this.$broadcast('getActID', this.actID, this.userID)
    this.judgeHadAuthorized()
    this.getDetails()
  }
  getDetails() {
    const database = wx.cloud.database({
      env: 'nkshare-3ufbs'
    })
    const activity = database.collection('activity')
    const takes = database.collection('take_activity')
    let that = this
    activity
      .where({
        _id: that.actID
      })
      .get({
        success(res) {
          let details = res.data
          that.actDetails = details[0]
          that.setData({
            actDetails: that.actDetails
          })
        }
      })
    takes
      .where({
        act_id: that.actID
      })
      .get({
        success(res) {
          that.actTakes = res.data
          that.setData({
            actTakes: that.actTakes
          })
          that.judgeHasJoin()
          that.attendeesAvatar = []
          for (var i = 0; i < that.actTakes.length; i++) {
            that.getUserAvator(that.actTakes[i]._openid)
          }
          // 获取发起者信息
          const database = wx.cloud.database({
            env: 'nkshare-3ufbs'
          })
          const User = database.collection('user')
          User.where({
            _openid: that.sponsorID
          }).get({
            success(res) {
              let UserInfo = res.data
              that.sponsorName = UserInfo[0].name
              that.sponsorCollege = UserInfo[0].college
              that.setData({
                sponsorName: that.sponsorName,
                sponsorCollege: that.sponsorCollege
              })
              wx.hideLoading()
            }
          })
          that.$apply()
        }
      })
  }
  judgeHasJoin() {
    this.hasJoin = false
    this.isCreator = false
    for (var i = 0; i < this.actTakes.length; i++) {
      if (this.userID === this.actTakes[i]._openid) {
        if (this.actTakes[i].type === 'C') {
          this.isCreator = true
        } else {
          this.isCreator = false
        }
        this.hasJoin = true
        this.setData({
          hasJoin: this.hasJoin,
          isCreator: this.isCreator
        })
      }
      if (this.actTakes[i].type === 'C') {
        this.sponsorID = this.actTakes[i]._openid
        this.setData({
          sponsorID: this.sponsorID
        })
      }
    }
  }
  getUserAvator(e) {
    let that = this
    const database = wx.cloud.database({
      env: 'nkshare-3ufbs'
    })
    const userTable = database.collection('user')
    userTable
      .where({
        _openid: e
      })
      .get({
        success(res) {
          let temp = res.data[0].avatarUrl
          that.attendeesAvatar.push(temp)
          that.setData({
            attendeesAvatar: that.attendeesAvatar
          })
        }
      })
  }
  requestNewUser() {
    let that = this
    const database = wx.cloud.database({
      env: 'nkshare-3ufbs'
    })
    const takes = database.collection('take_activity')
    takes
      .where({
        act_id: that.actID
      })
      .get({
        success(res) {
          that.actTakes = res.data
          that.setData({
            actTakes: that.actTakes
          })
          that.judgeHasJoin()
          that.attendeesAvatar = []
          for (var i = 0; i < that.actTakes.length; i++) {
            that.getUserAvator(that.actTakes[i]._openid)
          }
          that.$apply()
        }
      })
  }
  attendActivity() {
    // 显示loading提示框
    wx.showLoading({
      title: '加入活动中',
      // 防止触摸穿透
      mask: true
    })
    let that = this
    const database = wx.cloud.database({
      env: 'nkshare-3ufbs'
    })
    const takes = database.collection('take_activity')
    takes
      .where({
        _openid: that.userID,
        act_id: that.actID
      })
      .get({
        success(res) {
          if (res.data.length === 0) {
            takes.add({
              data: {
                userID: that.userID,
                act_id: that.actID,
                type: 'A'
              },
              success(res) {
                that.requestNewUser()
                wx.hideLoading()
                wx.showModal({
                  title: '亲爱的用户',
                  content: '您已报名成功',
                  showCancel: false,
                  // cancelText: '取消',
                  confirmText: '确认',
                  success: res => {}
                })
              }
            })
          } else {
            console.log('该用户已报名')
          }
        }
      })
  }
  judgeHadAuthorized() {
    this.hasAuthorized = false
    let that = this
    // 判断授权状态
    wx.getSetting({
      success(res) {
        if (res.authSetting['scope.userInfo']) {
          that.hasAuthorized = true
          that.$apply()
        }
      }
    })
  }
}
</script>
