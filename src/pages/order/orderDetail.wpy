<template>
  <view class="padding-sm">
    <view class="bg-white radius shadow-blur grid col-1 margin-bottom">
      <view class="text-xl padding" role="" aria-label="">
        <text class="text-black text-bold">{{ orderDetail.title }}</text>
      </view>
      <view class="cu-list menu {{menuBorder?'sm-border':''}} {{menuCard?'card-menu margin-top':''}}">
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-circlefill text-grey"></text>
            <text class="text-grey">创建者:</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm"> {{ creatorName }}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-btn text-olive"></text>
            <text class="text-grey">创建时间</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm"> {{ dateFormat.dateFormat(orderDetail.start) }}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-btn text-green"></text>
            <text class="text-grey">截止时间</text>
          </view>
          <view class="action">
            <text class="text-grey text-sm"> {{ dateFormat.dateFormat(orderDetail.end) }}</text>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-emojiflashfill text-pink"></text>
            <text class="text-grey">参与人员</text>
          </view>
          <view class="action">
            <view class="cu-avatar-group">
              <repeat for="{{attendeesAvatar}}" key="index" index="index" item="item">
                <view class="cu-avatar round sm" style="background-image:url({{item}});"></view>
              </repeat>
            </view>
          </view>
        </view>
        <view class="cu-item {{menuArrow?'arrow':''}}">
          <view class="content">
            <text class="cuIcon-tagfill text-red"></text>
            <text class="text-grey">标签</text>
          </view>
          <view class="action">
            <view wx:if="{{ label == 'NC' }}" class="cu-tag round bg-orange light">奶茶</view>
            <view wx:if="{{ label == 'MLT' }}" class="cu-tag round bg-olive light">麻辣烫</view>
            <view wx:if="{{ label == 'other' }}" class="cu-tag round bg-blue light">其它</view>
          </view>
        </view>
        <view class="cu-item">
          <view class="content padding-tb-sm">
            <view>
              <text class="cuIcon-clothesfill text-blue margin-right-xs"></text>详细描述</view>
            <view class="text-gray text-sm">
              <text class="cuIcon-infofill margin-right-xs"></text> {{ orderDetail.description }} </view>
          </view>
        </view>
      </view>
      <view class="text-center">
        <view wx:if="{{hasCreated==false && hasJoin==false}}" class="margin-top margin-bottom">
          <button class="cu-btn round bg-red lg" role="button" aria-label="" aria-disabled="false" bindtap='joinOrder'>
            加入拼单
          </button>
        </view>
        <view wx:if="{{hasJoin==true}}" class="margin-top margin-bottom">
          <button class="cu-btn round bg-red lg" role="button" aria-label="" aria-disabled="false" bindtap='quit'>
            退出拼单
          </button>
        </view>
        <view wx:if="{{hasCreated || hasJoin}}" class="margin-top margin-bottom">
          <button class="cu-btn round bg-blue lg" role="button" aria-label="" aria-disabled="false" bindtap="showModal" data-target="DialogModal1">
            评价拼单
          </button>
        </view>
      </view>

      <view wx:if="{{hasCreated || hasJoin}}">
        <view class="cu-bar bg-white solid-bottom margin-top">
          <view class="action">
            <text class="cuIcon-title text-orange"></text>消息列表
          </view>
        </view>
        <view class="cu-list menu">
          <repeat for="{{commentArray}}" key="index" index="index" item="item">
            <view class="cu-list menu-avatar">
              <view class="cu-item">
                <view
                  class="cu-avatar round lg"
                  style="background-image:url({{item.avatarUrl}});">
                </view>
                <view class="content" style="line-height:1em">
                  <view class="text-grey">{{item.name}}</view>
                  <view class="text-gray text-sm flex">
                    <text class="text-cut">
                      {{item.comment}}
                    </text>
                  </view>
                </view>
                <view class="action">
                  <view class="text-grey text-xs">{{dayFormat.dayFormat(item.time)}}</view>
                  <view class="text-grey text-xs">{{timeFormat.timeFormat(item.time)}}</view>
                </view>
              </view>
            </view>
          </repeat>
        </view>
        <view class="cu-bar input margin-bottom">
          <input placeholder="输入消息..." maxlength="200" bindinput='messageChange' value="{{ message }}"/>
          <button class="cu-btn bg-green shadow" bindtap="addComment">发送</button>
        </view>
      </view>

      <view class="cu-modal {{modalName=='DialogModal1'?'show':''}}">
        <view class="cu-dialog">
          <view class="cu-bar bg-white justify-end">
            <view class="content">评价</view>
            <view class="action" bindtap="hideModal">
              <text class="cuIcon-close text-red"></text>
            </view>
          </view>
          <view class="padding-xl">
            <view class="cu-form-group margin-top">
              <view class="title">评分星级</view>
              <picker bindchange="PickerChange" value="{{index}}" range="{{picker}}">
                <view class="picker">
                  {{index?picker[index]:'请选择其中一种'}}
                </view>
              </picker>
            </view>
          </view>
          <view class="cu-bar bg-white justify-end">
            <view class="action">
              <button class="cu-btn line-green text-green" bindtap="hideModal">取消</button>
              <button class="cu-btn bg-green margin-left" bindtap="hideModal">确认评价</button>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import dateFormat from './dateFormat.wxs'
import dayFormat from './dayFormat.wxs'
import timeFormat from './timeFormat.wxs'

export default class OrderDetail extends wepy.page {
  config = {
    navigationBarTitleText: '订单详情'
  }

  wxs = {
    dateFormat: dateFormat,
    dayFormat: dayFormat,
    timeFormat: timeFormat
  }

  data = {
    hasJoin: false,
    modalName: null,
    index: null,
    picker: ['1', '2', '3', '4', '5'],
    orderID: '',
    orderDetail: {},
    label: '',
    creatorID: '',
    creatorName: '',
    InputBottom: 0,
    commentArray: [],
    userID: '',
    userName: '',
    message: '',
    hasCreated: false,
    textareaInput: '',
    attendeesAvatar: [],
    avatarUrl: ''
  }

  PickerChange(e) {
    this.index = e.detail.value
  }

  joinOrder(e) {
    wx.showLoading({
      title: '加入拼单中',
      // 防止触摸穿透
      mask: true
    })
    let that = this

    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })

    const takeorder = database.collection('take_order')
    takeorder.add({
      data: {
        orderID: that.orderID,
        type: 'A',
        userID: that.userID
      },
      success(res) {
        that.hasJoin = true
        that.setData({
          hasJoin: that.hasJoin
        })
        that.requestNewUser()
        wx.hideLoading()
        wx.showModal({
          title: '亲爱的用户',
          content: '您已成功加入',
          showCancel: false,
          // cancelText: '取消',
          confirmText: '确认',
          success: res => {}
        })
      }
    })
  }

  showModal(e) {
    this.modalName = e.currentTarget.dataset.target
  }

  hideModal(e) {
    this.modalName = null
  }

  messageChange(e) {
    this.message = e.detail.value
  }

  addComment(e) {
    if (this.message.length === 0) {
      wx.showToast({
        title: '不能发送空消息',
        icon: 'none',
        duration: 2000
      })
      return
    }

    let that = this
    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })
    const comment = database.collection('comment')

    comment.add({
      // data 字段表示需新增的 JSON 数据
      data: {
        // _id: 'todo-identifiant-aleatoire', // 可选自定义 _id，在此处场景下用数据库自动分配的就可以了
        comment: that.message,
        event_id: that.orderID,
        name: that.userName,
        time: new Date(),
        type: 'order',
        user_id: that.userID,
        avatarUrl: that.avatarUrl
      },
      success(res) {
        comment.where({
          event_id: that.orderID
        }).get({
          success(res) {
            that.commentArray = res.data
            that.setData({
              commentArray: that.commentArray
            })

            that.message = ''
            that.setData({
              message: that.message
            })
            that.$apply()
          }
        })
      }
    })
  }

  getCommentAvator() {
    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })
    const User = database.collection('user')
    let that = this
    User.where({
      _openid: that.userID
    }).get({
      success(res) {
        let UserInfo = res.data
        that.avatarUrl = UserInfo[0].avatarUrl
        that.setData({
          avatarUrl: that.avatarUrl
        })
      }
    })
  }

  onLoad(options) {
    this.userID = this.$parent.globalData.userID
    this.userName = this.$parent.globalData.userName
    this.orderID = options.id
    this.getDetail()
    this.getCommentAvator()
  }

  getUserAvator(e) {
    let that = this
    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })
    const userTable = database.collection('user')
    userTable
      .where({
        _openid: e
      })
      .get({
        success(res) {
          let temp = res.data[0].avatarUrl
          that.attendeesAvatar.push(temp)
          that.setData({
            attendeesAvatar: that.attendeesAvatar
          })
        }
      })
  }

  quit(e) {
    // 显示loading提示框
    wx.showLoading({
      title: '退出拼单中',
      // 防止触摸穿透
      mask: true
    })
    let that = this
    wx.cloud.callFunction({
      name: 'quitOrder',
      data: {
        orderID: that.orderID,
        userID: that.userID,
        type: 'A'
      },
      complete: res => {
        that.hasJoin = false
        that.setData({
          hasJoin: that.hasJoin
        })
        that.requestNewUser()
        wx.hideLoading()
        wx.showModal({
          title: '亲爱的用户',
          content: '您已成功退出',
          showCancel: false,
          // cancelText: '取消',
          confirmText: '确认',
          success: res => {}
        })
      }
    })
  }

  requestNewUser() {
    let that = this
    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })
    const takes = database.collection('take_order')
    takes
      .where({
        orderID: that.orderID
      })
      .get({
        success(res) {
          that.actTakes = res.data
          that.setData({
            actTakes: that.actTakes
          })
          that.attendeesAvatar = []
          for (var i = 0; i < that.actTakes.length; i++) {
            that.getUserAvator(that.actTakes[i]._openid)
          }
          that.$apply()
        }
      })
  }

  getDetail() {
    let that = this

    const database = wx.cloud.database({
      env: 'nkushare-kynis'
    })

    const order = database.collection('order')
    const takeorder = database.collection('take_order')
    const user = database.collection('user')
    const comment = database.collection('comment')

    order.where({
      _id: this.orderID
    }).get({
      success(res) {
        let detail = res.data
        that.orderDetail = detail[0]
        that.label = that.orderDetail.good_label
        that.setData({
          orderDetail: that.orderDetail,
          label: that.label
        })
      }
    })

    takeorder.where({
      orderID: this.orderID,
      type: 'C'
    }).get({
      success(res) {
        that.creatorID = res.data[0].userID
        that.setData({
          creatorID: that.creatorID
        })
        user.where({
          _openid: that.creatorID
        }).get({
          success(res) {
            that.creatorName = res.data[0].name
            that.setData({
              creatorName: that.creatorName
            })
          }
        })
      }
    })

    takeorder.where({
      orderID: this.orderID
    }).get({
      success(res) {
        that.actTakes = res.data
        that.setData({
          actTakes: that.actTakes
        })
        that.attendeesAvatar = []
        for (var i = 0; i < that.actTakes.length; i++) {
          that.getUserAvator(that.actTakes[i]._openid)
        }
      }
    })

    takeorder.where({
      orderID: this.orderID,
      userID: this.userID
    }).get({
      success(res) {
        if (res.data[0].type === 'C') {
          that.hasCreated = true
          that.setData({
            hasCreated: that.hasCreated
          })
        }
        if (res.data[0].type === 'A') {
          that.hasJoin = true
          that.setData({
            hasJoin: that.hasJoin
          })
        }
      }
    })

    comment.where({
      event_id: this.orderID
    }).get({
      success(res) {
        that.commentArray = res.data
        that.setData({
          commentArray: that.commentArray
        })
      }
    })
  }
}
</script>

<style>
</style>
